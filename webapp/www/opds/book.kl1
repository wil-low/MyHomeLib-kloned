<%
	#include <klone/context.h>
    #include "../../../../../webapp/src/globals.h"
	database_t db_s;
	err ("1\n");
	err ("db %X\n", &db_s.db);
    vars_t* vars = request_get_getargs (request);
 	const char* book_id_str = vars_get_value (vars, "id");
 	int book_id = atoi (book_id_str);
	err ("2\n");
	sqlite3_reset (db_s.st_book_file_by_id);
	err ("3\n");
	sqlite3_bind_int (db_s.st_book_file_by_id, 1, book_id);
	err ("4\n");
	int rc = sqlite3_step(db_s.st_book_file_by_id);
	err ("5\n");
	if (rc == SQLITE_ROW) {
		err ("6\n");
		const char* folder = sqlite3_column_text (db_s.st_book_file_by_id, 0);
		const char* filename = sqlite3_column_text (db_s.st_book_file_by_id, 1);
		const char* ext = sqlite3_column_text (db_s.st_book_file_by_id, 2);
		mkdir ("/tmp/kloned", S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);
		chdir ("/tmp/kloned");
		char syscmd[2048];
		sprintf (syscmd, "unzip %s/%s %s%s", 
			u_config_get_subkey_value (ctx->config, "library_path"), folder, filename, ext);
		err (syscmd);
		system (syscmd);

		char zip_filename[100];
		sprintf (zip_filename, "%s%s.zip", filename, ext);
		sprintf (syscmd, "zip %s %s%s", zip_filename, filename, ext);
		system (syscmd);
		err ("%s\n", syscmd);

		response_set_content_type (response, "application/x-fictionbook");
		response_print_header (response);
		io_t* io = response_io (response);
		io_t* book_io;
		u_file_open (zip_filename, O_RDONLY, &book_io);
		io_pipe (book_io, io);
		io_close (book_io);
		io_free (book_io);
	}
	else {
		err ("7\n");
		err ("Can't execute: %s (%d)\n", sqlite3_errmsg(db_s.db), rc);
	}
	err ("8\n");
	sqlite3_finalize (db_s.st_book_file_by_id);
%>

